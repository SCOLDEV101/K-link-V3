<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use App\Models\HobbyModel;
use App\Models\UserModel;
use App\Models\DayModel;
use App\Models\TagModel;
use App\Models\GroupTagModel;
use App\Models\GroupModel;
use App\Models\GroupDayModel;
use App\Models\MemberModel;
use App\Models\RequestModel;
use App\Models\BookmarkModel;
use App\Models\NotifyModel;

use Illuminate\Support\Facades\Log;
// use Illuminate\Support\Facades\DB;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\HobbyModel>
 */
class HobbyModelFactory extends Factory
{
    public static $generatedIds = [];
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {   
        $tags = [
            //hobby
            'วาดภาพ', 'ระบายสี', 'ปั้นดิน', 'ประดิษฐ์ของใช้', 'ถักไหมพรม', 'ทำสบู่', 'ตัดเย็บเสื้อผ้า', 'ทำเครื่องประดับ', 'งานฝีมือไม้', 'ทำสมุดโน้ต',
            'เขียนตัวอักษรศิลป์', 'เล่นกีตาร์', 'เล่นเปียโน', 'ร้องเพลง', 'เต้น', 'แสดงละคร', 'เล่นไวโอลิน', 'แต่งเพลง', 'คณะดนตรี', 'เล่นอูคูเลเล่',
            'ขับร้องประสานเสียง', 'ฝึกบีทบ็อกซ์', 'วิ่ง', 'ปั่นจักรยาน', 'เล่นบาสเกตบอล', 'เตะฟุตบอล', 'แบดมินตัน', 'เทเบิลเทนนิส', 'ปีนเขา', 'ว่ายน้ำ',
            'ออกกำลังกาย', 'โยคะ', 'เดินป่า', 'สะสมแสตมป์', 'สะสมโมเดล', 'เล่นเกมบอร์ด', 'เล่นไพ่', 'สะสมหนังสือการ์ตูน', 'เล่นหมากรุก', 'เล่นโกะ',
            'เล่นโดมิโน', 'สะสมเหรียญ', 'สะสมฟิกเกอร์', 'เล่นเกมพีซี', 'เขียนโปรแกรม', 'เขียนบล็อก', 'แต่งภาพกราฟิก', 'สร้างเกม', 'ถ่ายภาพยนตร์', 'สร้างหุ่นยนต์',
            'ทดลองวิทยาศาสตร์', 'ศึกษาดาราศาสตร์', 'พัฒนาแอปพลิเคชัน', 'ตัดต่อวีดีโอ', 'วิจัยอิเล็กทรอนิกส์', 'ทำอาหาร', 'ทำขนมหวาน', 'ชงกาแฟ', 'ทำเครื่องดื่มค็อกเทล', 'ทำเบเกอรี่',
            'ชิมอาหาร', 'เพาะถั่วงอก', 'ทำชานมไข่มุก', 'ปลูกผัก', 'ทำอาหารญี่ปุ่น', 'ทำขนมปัง', 'อ่านนิยาย', 'อ่านหนังสือวิทยาศาสตร์', 'เรียนภาษา', 'เขียนบทความ',
            'ฟังพอดแคสต์', 'เข้าร่วมวงสนทนาภาษา', 'ศึกษาประวัติศาสตร์', 'อ่านวรรณกรรมคลาสสิก', 'เขียนบทกวี', 'ศึกษาปรัชญา', 'ทำวิจัย', 'อาสาสมัคร', 'ดูแลสัตว์เลี้ยง', 'ปลูกต้นไม้',
            'ทำความสะอาด', 'สิ่งแวดล้อม', 'สนับสนุนกีฬา', 'งานการกุศล', 'ให้คำปรึกษา', 'กิจกรรม',

            //tutoring,library?
            'ฟิสิกส์', 'เคมี', 'ชีววิทยา', 'คณิตศาสตร์เชิงเส้น', 'สถิติและการวิเคราะห์ข้อมูล', 'แคลคูลัส', 'จุลชีววิทยา', 'วิทยาศาสตร์สิ่งแวดล้อม', 'ธรณีวิทยา', 'พันธุศาสตร์',
            'วิทยาการคอมพิวเตอร์', 'นาโนเทคโนโลยี', 'จิตวิทยา', 'ปรัชญา', 'รัฐศาสตร์', 'สังคมวิทยา', 'ประวัติศาสตร์', 'เศรษฐศาสตร์', 'กฎหมาย', 'มานุษยวิทยา',
            'นานาชาติ', 'ภูมิศาสตร์', 'วรรณกรรม', 'ภาษา', 'กายวิภาคศาสตร์', 'สรีรวิทยา', 'เภสัชวิทยา', 'วิทยาศาสตร์สุขภาพ', 'พยาบาลศาสตร์', 'ชีวเคมี',
            'จิตเวชศาสตร์', 'วิทยาศาสตร์การกีฬา', 'พันธุศาสตร์ทางการแพทย์', 'การแพทย์ทางเลือก', 'โภชนาการ', 'ระบาดวิทยา', 'การบัญชี', 'การตลาด', 'การจัดการ', 'การเงิน',
            'การบริหารธุรกิจ', 'เศรษฐศาสตร์ระหว่างประเทศ', 'การเป็นผู้ประกอบการ', 'ทรัพยากรบุคคล', 'การลงทุน', 'กลยุทธ์การตลาดดิจิทัล', 'การค้าระหว่างประเทศ', 'พฤติกรรมองค์กร', 'ทัศนศิลป์', 'ศิลปะสมัยใหม่',
            'การออกแบบแฟชั่น', 'การออกแบบกราฟิก', 'การถ่ายภาพ', 'ประวัติศาสตร์ศิลปะ', 'การออกแบบผลิตภัณฑ์', 'ดนตรีศึกษา', 'การสร้างภาพยนตร์', 'วรรณคดีศึกษา', 'สื่อสารมวลชน', 'สถาปัตยกรรม',
            'วิทยาการข้อมูล', 'การพัฒนาเว็บ', 'การพัฒนาแอปพลิเคชันมือถือ', 'การวิเคราะห์ข้อมูล', 'เครือข่ายคอมพิวเตอร์', 'การรักษาความปลอดภัยทางไซเบอร์', 'การเรียนรู้ของเครื่องจักร', 'การจัดการฐานข้อมูล', 'คอมพิวเตอร์กราฟิก', 'วิศวกรรมซอฟต์แวร์',
            'การพัฒนาเกม', 'การเปลี่ยนแปลงสภาพภูมิอากาศ', 'การอนุรักษ์พลังงาน', 'ความยั่งยืน', 'การอนุรักษ์สัตว์ป่า', 'การจัดการทรัพยากรธรรมชาติ', 'สิ่งแวดล้อมศึกษา', 'การฟื้นฟูสิ่งแวดล้อม', 'เศรษฐศาสตร์เชิงนิเวศ', 'นิเวศวิทยา',
            'การออกแบบชุมชนสีเขียว', 'วิศวกรรมศาสตร์', 'สถาปัตยกรรมศาสตร์', 'ครุศาสตร์อุตสาหกรรมและเทคโนโลยี', 'เทคโนโลยีการเกษตร', 'วิทยาศาสตร์',
            'เทคโนโลยีสารสนเทศ', 'อุตสาหกรรมอาหาร', 'วิทยาลัยเทคโนโลยีและนวัตกรรมวัสดุ', 'วิทยาลัยนวัตกรรมการผลิตขั้นสูง', 'วิทยาลัยนานาชาติ', 'บริหารธุรกิจ', 'ศิลปศาสตร์', 'แพทยศาสตร์', 'วิทยาลัยวิศวกรรมสังคีต', 'ทันตแพทยศาสตร์',
            'วิทยาลัยอุตสาหกรรมการบินนานาชาติ', 'Biomedical Engineer', 'Computer Engineering', 'Mechanical Engineering', 'Chemical Engineering', 'Civil Engineering', 'Industrial Engineering', 'Multidisciplinary Engineering', 
            'วิศวกรรมชีวการแพทย์', 'วิศวกรรมการวัดและควบคุม',
            'วิศวกรรมคอมพิวเตอร์', 'วิศวกรรมเครื่องกล', 'วิศวกรรมเคมี', 'วิศวกรรมไฟฟ้า', 'วิศวกรรมอุตสาหการ', 'วิศวกรรมอาหาร', 'วิศวกรรมอิเล็กทรอนิกส์', 'วิศวกรรมโทรคมนาคม', 'วิศวกรรมโยธา', 'วิศวกรรมเกษตร',
            'Bachelor of Science in Architecture', 'Bachelor of Fine Arts in Creative Arts and Curatorial Studies', 'Bachelor of Design Program in Design Intelligence for Creative Economy',
            'สถาปัตยกรรม', 'สถาปัตยกรรมภายใน', 'ศิลปอุตสาหกรรม', 'นิเทศศิลป์', 'วิจิตรศิลป์', 'ศิลปกรรม', 'ครุศาสตร์สถาปัตยกรรม',
            'ครุศาสตร์วิศวกรรม', 'ครุศาสตร์เกษตร', 'ครุศาสตร์ภาษาและสังคม', 'เทคโนโลยีการผลิตพืช', 'เทคโนโลยีการผลิตสัตว์และประมง', 'ปฐพีวิทยา', 'เทคโนโลยีการจัดการศัตรูพืช', 'นวัตกรรมการสื่อสารและพัฒนาการเกษตร', 
            'สำนักงานบริหารหลักสูตรสหวิทยาการเทคโนโลยีการเกษตร', 'ศิลปศาสตร์ประยุกต์',
            'สถิติ', 'ศูนย์วิเคราะห์ข้อมูลดิจิทัลอัจฉริยะพระจอมเกล้าลาดกระบัง', 'นาโนวิทยาและนาโนเทคโนโลยี', 'Multidisciplinary', 'วิศวกรรมวัสดุนาโน', 'วิศวกรรมระบบการผลิต', 'การจัดการวิศวกรรมและเทคโนโลยี', 
            'บริหารธุรกิจเกษตร', 'เศรษฐศาสตร์ธุรกิจและการจัดการ', 'มนุษยศาสตร์และสังคมศาสตร์',
            'แพทยศาสตรนานาชาติ', 'วิศวกรรมดนตรีและสื่อประสม', 'ทันตแพทยศาสตร์', 'วิศวกรรมการบิน', 'นวัตกรรมการจัดการอุตสาหกรรมการบินและการบริการ',

            // place
            'ห้องสมุดกลาง','ศูนย์กีฬา','อาคารเรียนรวม','ห้องปฏิบัติการคอมพิวเตอร์',
            'โรงอาหารกลาง','สำนักวิจัยและพัฒนา','อาคารวิศวกรรม','หอพักนักศึกษา',
            'โรงยิม','ศูนย์ภาษา','โรงอาหารวิทยาศาสตร์','ห้องประชุมใหญ่',
            'สถาบันเทคโนโลยีพระจอมเกล้าฯ','ห้องสมุดวิทยาศาสตร์และเทคโนโลยี','ห้องสมุดวิศวกรรมศาสตร์',
            'ร้านกาแฟสดคณะวิศวกรรม','ร้านก๋วยเตี๋ยวเรือป้าศรี','ร้านอาหารจุฑามาศ',
            'ร้านข้าวมันไก่ประตูน้ำ','ร้านปากซอยสุขสมาน','ร้านโกเฮง','ร้านก๋วยเตี๋ยวเป็ดลุงเคี้ยง',
            'บิ๊กซี ลาดกระบัง','ตลาดนัดศรีนครินทร์','ซีคอนสแควร์','ตลาดนัดมหาวิทยาลัย',
            'ห้างเมกา บางนา','โรบินสัน ลาดกระบัง','สวนพระนคร','สวนหลวง ร.9',
            'สวนดอกไม้','อ่างเก็บน้ำลาดกระบัง','สถานีแอร์พอร์ตลิงค์ลาดกระบัง',
            'สถานีรถไฟลาดกระบัง','ท่าอากาศยานสุวรรณภูมิ','สถานีรถไฟฟ้าสายสีเหลือง ศรีเอี่ยม','ออนไลน์',


            //time
            'ช่วงเช้า','ช่วงสาย','ช่วงบ่าย','ช่วงเย็น','ช่วงค่ำ','ช่วงดึก',
            ];

        $activityNames = [
            'การแข่งขันวาดภาพ', 
            'งานสัมมนาการทำสบู่', 
            'การฝึกอบรมการปั้นดิน', 
            'การประชุมการประดิษฐ์ของใช้', 
            'การท่องเที่ยวเชิงกีฬา', 
            'งานแสดงนวัตกรรมเครื่องดื่มค็อกเทล', 
            'กิจกรรมการเล่นกีตาร์', 
            'การประชุมเชิงปฏิบัติการการถ่ายภาพ', 
            'การฝึกอบรมวิทยาศาสตร์สิ่งแวดล้อม', 
            'การศึกษาเชิงปฏิบัติการการทำอาหาร',
            'การสอนเชิงดนตรี', 
            'การสัมมนาศิลปะการแสดง', 
            'การประชุมการวิเคราะห์ข้อมูล', 
            'กิจกรรมการเล่นบาสเกตบอล', 
            'งานวิจัยและพัฒนาการศึกษา', 
            'การเรียนรู้ด้านเทคโนโลยีสารสนเทศ', 
            'การอบรมการพัฒนาทักษะนักศึกษา', 
            'การประชุมวิทยาศาสตร์และการเขียนโปรแกรม', 
            'การจัดการโครงการการเขียนบล็อก', 
            'การฝึกอบรมการทำขนมหวาน',
            'การประชุมการสร้างเกม', 
            'การสัมมนาการจัดการทรัพยากรธรรมชาติ', 
            'การฝึกอบรมการถักไหมพรม', 
            'การประชุมการออกแบบแฟชั่น', 
        ];
        
        $locations = [
            'ห้องสมุดกลางการศึกษาศิลปะ', 
            'ศูนย์กีฬาและนันทนาการ', 
            'อาคารเรียนรวมการทำอาหาร', 
            'ห้องปฏิบัติการวิจัยวัสดุ', 
            'โรงอาหารกลางนักศึกษา', 
            'สำนักวิจัยและพัฒนาการศึกษา', 
            'อาคารวิศวกรรมการสร้างเกม', 
            'หอพักนักศึกษาและการศึกษา', 
            'โรงยิมและกิจกรรมนันทนาการ', 
            'ศูนย์ภาษาและการถ่ายภาพ', 
            'ห้องประชุมใหญ่สำหรับการฝึกอบรม', 
            'ห้องสมุดวิทยาศาสตร์และเทคโนโลยีการศึกษา', 
            'ห้องสมุดวิศวกรรมศาสตร์และการวิจัย', 
            'ร้านกาแฟสดสำหรับนักศึกษา', 
            'ร้านก๋วยเตี๋ยวและการทำอาหาร', 
            'บิ๊กซีและกิจกรรมการซื้อของ', 
            'ตลาดนัดการศึกษาและการพัฒนา', 
            'สวนหลวง ร.9 สำหรับกิจกรรมกลางแจ้ง', 
            'อ่างเก็บน้ำลาดกระบังสำหรับการพักผ่อน', 
            'สถานีรถไฟลาดกระบังสำหรับการเดินทาง', 
            'สนามบินสุวรรณภูมิสำหรับการเดินทาง',
        ];
        
        $details = [
            'การแข่งขันวาดภาพ: ร่วมสนุกกับกิจกรรมสร้างสรรค์ที่เปิดโอกาสให้คุณได้แสดงความสามารถในการวาดภาพ พร้อมทั้งใช้วัสดุสีและเครื่องมือที่ทันสมัย.',
            'งานสัมมนาการทำสบู่: เรียนรู้กระบวนการทำสบู่จากผู้เชี่ยวชาญ พร้อมทั้งได้ทดลองทำสบู่ของคุณเองด้วยวัตถุดิบธรรมชาติ.',
            'การฝึกอบรมการปั้นดิน: เข้าร่วมการฝึกอบรมที่สอนเทคนิคการปั้นดิน โดยใช้วัสดุที่เหมาะสมสำหรับการสร้างสรรค์ชิ้นงาน.',
            'การประชุมการประดิษฐ์ของใช้: ร่วมเสนอแนวคิดในการประดิษฐ์ของใช้ใหม่ ๆ และสร้างสรรค์ผลิตภัณฑ์ที่เป็นมิตรกับสิ่งแวดล้อม.',
            'การท่องเที่ยวเชิงกีฬา: เพลิดเพลินกับกิจกรรมกีฬาในธรรมชาติที่หลากหลาย พร้อมกับการใช้อุปกรณ์กีฬาและอาหารเพื่อสุขภาพ.',
            'งานแสดงนวัตกรรมเครื่องดื่มค็อกเทล: ชมและชิมนวัตกรรมใหม่ ๆ ในการทำค็อกเทลจากวัตถุดิบที่แปลกใหม่และสดใหม่.',
            'กิจกรรมการเล่นกีตาร์: มาร่วมสนุกกับการเล่นกีตาร์ พร้อมเรียนรู้เทคนิคใหม่ ๆ จากมืออาชีพ.',
            'การประชุมเชิงปฏิบัติการการถ่ายภาพ: ได้รับความรู้ในการถ่ายภาพด้วยกล้องดิจิตอล และเรียนรู้การแก้ไขภาพเบื้องต้น.',
            'การฝึกอบรมวิทยาศาสตร์สิ่งแวดล้อม: เรียนรู้เกี่ยวกับการอนุรักษ์สิ่งแวดล้อมและเทคนิคการวิเคราะห์ข้อมูลทางวิทยาศาสตร์.',
            'การศึกษาเชิงปฏิบัติการการทำอาหาร: ทดลองทำอาหารหลากหลายเมนูด้วยวัตถุดิบสดใหม่ พร้อมแนวทางการทำอาหารเพื่อสุขภาพ.',
            'การสอนเชิงดนตรี: เข้าร่วมเรียนรู้ทฤษฎีและการปฏิบัติเพื่อพัฒนาทักษะการเล่นดนตรี.',
            'การสัมมนาศิลปะการแสดง: พบกับนักแสดงมืออาชีพและเรียนรู้เทคนิคการแสดงที่น่าสนใจ.',
            'การประชุมการวิเคราะห์ข้อมูล: แลกเปลี่ยนความคิดเห็นเกี่ยวกับการวิเคราะห์ข้อมูลและการใช้เทคโนโลยีใหม่ ๆ ในการวิเคราะห์.',
            'กิจกรรมการเล่นบาสเกตบอล: เข้าร่วมแข่งขันบาสเกตบอลในบรรยากาศที่สนุกสนานและมีความร่วมมือ.',
            'งานวิจัยและพัฒนาการศึกษา: เสนอผลงานวิจัยเกี่ยวกับการศึกษาและพัฒนาแนวทางการสอนใหม่ ๆ.',
            'การเรียนรู้ด้านเทคโนโลยีสารสนเทศ: อัปเดตความรู้เกี่ยวกับเทคโนโลยีสารสนเทศที่เปลี่ยนแปลงอยู่เสมอ.',
            'การอบรมการพัฒนาทักษะนักศึกษา: พัฒนาทักษะที่สำคัญสำหรับนักศึกษาในยุคปัจจุบัน.',
            'การประชุมวิทยาศาสตร์และการเขียนโปรแกรม: ร่วมอภิปรายแนวทางการใช้วิทยาศาสตร์ในการเขียนโปรแกรม.',
            'การจัดการโครงการการเขียนบล็อก: เรียนรู้การสร้างเนื้อหาที่มีคุณภาพและการจัดการบล็อก.',
            'การฝึกอบรมการทำขนมหวาน: ทำขนมหวานจากวัตถุดิบที่มีคุณภาพและเรียนรู้เคล็ดลับในการทำขนม.',
            'การประชุมการสร้างเกม: แลกเปลี่ยนไอเดียในการพัฒนาเกมใหม่ ๆ และการใช้เทคโนโลยีที่ทันสมัย.',
            'การสัมมนาการจัดการทรัพยากรธรรมชาติ: สนทนาเกี่ยวกับการจัดการทรัพยากรธรรมชาติและการอนุรักษ์.',
            'การฝึกอบรมการถักไหมพรม: เรียนรู้การถักไหมพรมด้วยเทคนิคใหม่ ๆ และวัสดุที่มีคุณภาพ.',
            'การประชุมการออกแบบแฟชั่น: พบกับนักออกแบบแฟชั่นและเรียนรู้แนวทางการออกแบบที่น่าสนใจ.',
        ];
            
        $userID = UserModel::pluck('id')->toArray(); // เอารายชื่อ user ออกมา
        $leader = $this->faker->randomElement($userID); // สุ่มเอา 1 user เป็น leader

        $memberMax = $this->faker->numberBetween(1, 99); // Real Max: 99, จำนวนสมาชิกที่มีได้
        $memberRand = rand(1, 5); // สุ่มจำนวนสมาชิกกลุ่ม

        $availableUsers = array_diff($userID, [$leader]); // เอาสมาชิกที่ไม่ใช่ leader
        $members = $this->faker->randomElements($availableUsers, $memberRand - 1); // สุ่มเอา id ใน userArray ที่ไม่มี leader

        $remainingUsers = array_diff($availableUsers, $members); // จำนวน user ที่เหลือ ที่ไม่ใช่ member และ leader
        $requests = $this->faker->randomElements($remainingUsers, $this->faker->numberBetween(0, count($remainingUsers))); // สุ่มเอาสามชิกที่เหลือ ที่ไม่ใช่ member และ leader มาลงใน request

        $selectedTags = $this->faker->randomElements($tags, $this->faker->numberBetween(1, 5)); // สุ่มให้จำนวนแท็กมี 1-5 แท็ก
        
        $startTime = $this->faker->time(); // สุ่มเวลา
        $endTime = $this->faker->time(); // สุ่มเวลา
        
        $startTimestamp = strtotime($startTime);
        $endTimestamp = $startTimestamp + rand(3600, 10800); // สุ่มให้เวลา endTime ห่างจาก startTime อยู่ 1-3 ชม.
    
        $startTime = date('H:i:s', $startTimestamp); // format เวลา
        $endTime = date('H:i:s', $endTimestamp); // format เวลา

        $hobby = [
            'id' => $this->idGeneration(),
            'imageOrFileID' => $this->faker->randomElement([1,4,5,6,7]),
            'name' => $this->faker->randomElement($activityNames),
            'memberMax' => $this->faker->randomElement([$memberMax, null]),
            'location' => $this->faker->randomElement($locations),
            'detail' => $this->faker->randomElement($details),
            'startTime' => $startTime,
            'endTime' => $endTime,
            'leader' => $leader,
            'createdBy' => $this->faker->randomElement(array_merge([$leader], $members)),
        ];

        // เก็บ id กลุ่มและประเภท ลงใน groupModel โดย groupModel จะเป็นตัวเชื่อมไอดีของกลุ่มและโพสต์ทั้งหมดเพื่อแสดงรายละเอียด
        $createGroup = GroupModel::create([
            // 'id' => $this->groupIdGenerator(),
            'groupID' => $hobby['id'],
            'type' => 'hobby',
        ]);

        // สุ่มสมาชิก โดยเก็บ userID เป็น id ใน members Array
        MemberModel::create([
            'groupID' => $createGroup['id'],
            'userID' => $leader,
        ]);
        foreach ($members as $member) {
            MemberModel::create([
                'groupID' => $createGroup['id'],
                'userID' => $member,
            ]);

            NotifyModel::create([
                'receiverID' => $member,
                'senderID' => $leader,
                'postID' => $createGroup['groupID'],
                'type' => 'acceptRequest',
            ]);

            NotifyModel::create([
                'receiverID' => $member,
                'senderID' => $leader,
                'postID' => $this->faker->randomElement($activityNames),
                'type' => 'delete',
            ]);
        }

        // สุ่ม requeset โดยเก็บ userID เป็น id ใน requests Array ซึ่งเป็นส่วนเหลือจากสมาชิกและหัวหน้า
        foreach ($requests as $request) {
            RequestModel::create([
                'groupID' => $createGroup['id'],
                'userID' => $request,
            ]);

            NotifyModel::create([
                'receiverID' => $leader,
                'senderID' => $request,
                'postID' => $createGroup['groupID'],
                'type' => 'request',
            ]);

            NotifyModel::create([
                'receiverID' => $request,
                'senderID' => $leader,
                'postID' => $createGroup['groupID'],
                'type' => 'kick',
            ]);

            NotifyModel::create([
                'receiverID' => $request,
                'senderID' => $leader,
                'postID' => $createGroup['groupID'],
                'type' => 'rejectRequest',
            ]);
        }

        foreach ($tags as $tag) {
            $tag = TagModel::firstOrCreate(['name' => $tag]);
        }

        // บันทึก tag ที่ชื่อไม่ซ้ำกัน ลงใน tagModel และเก็บกลุ่มกับแท็กของกลุ่ม ลงใน groupTagModel
        foreach ($selectedTags as $tagName) {
            $tag = TagModel::firstOrCreate(['name' => $tagName]);
            GroupTagModel::create([
                'groupID' => $createGroup['id'],
                'tagID' => $tag->id,
                'type' => 'hobby'
            ]);
        }

        // ดึงไอดีของวันจาก DayModel และสุ่มเก็บ id กลุ่มและ id วันเพื่อเชื่อมวันกลับกลุ่มใน GroupDayModel
        $days = DayModel::pluck('id')->toArray();

        $selectedDays = array_unique($this->faker->randomElements($days, $this->faker->numberBetween(1, count($days))));

        foreach ($selectedDays as $day) {
            $dayModel = DayModel::find($day);
            if ($dayModel) {
                GroupDayModel::create([
                    'groupID' => $createGroup['id'],
                    'dayID' => $dayModel->id,
                ]);
            }
        }

        return $hobby;

    }

    // public function randdays()
    // {
    //     $days = ['จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.', 'อา.'];
    //     $index = rand(1, 7);
    //     $array = array();
    //     for ($each = 7 - $index; $each < 7; $each++) {
    //         $array[] = $days[$each];
    //     }
    //     return implode(',', $array);
    // }

    // public function randusers($userID, $memberMax)
    // {
    //     $array = array();
    //     if ($memberMax > 1) {
    //         for ($each = 0; $each < $memberMax - 1; $each++) {
    //             $index = rand($each, $memberMax);
    //             if (!empty($userID[$index]) && $userID[$index] != null) {
    //                 $array[] = $userID[$index];
    //                 unset($userID[$index]);
    //             }
    //         }
    //         if (sizeof($array) > 0) {
    //             return ',' . implode(',', $array);
    //         }
    //     }
    // }

    public function idGeneration() {
        $prefix = 'h-' . now()->format('Ymd') . '-';
        $sets = 3; 
        $numbersPerSet = 1000; 

        $allNumbers = [];
        for ($i = 0; $i < $sets; $i++) {
            $numbers = range(1, 100);
            shuffle($numbers);
            $allNumbers[] = array_slice($numbers, 0, $numbersPerSet);
        }

        $randomSet = $allNumbers[array_rand($allNumbers)];
        $id = $randomSet[array_rand($randomSet)];

        // Ensure the ID is unique
        while (in_array($id, self::$generatedIds)) {
            $id = $randomSet[array_rand($randomSet)];
        }
        $id = str_pad($id, 3, '0', STR_PAD_LEFT);
        self::$generatedIds[] = $id;
        return $prefix.$id;
    }

    // public static function groupIdGenerator() {
    //     $prefix = 'g-' . now()->format('Ymd') . '-';
    //     $sets = 5; 
    //     $numbersPerSet = 1000; 

    //     $allNumbers = [];
    //     for ($i = 0; $i < $sets; $i++) {
    //         $numbers = range(1, 10000);
    //         shuffle($numbers);
    //         $allNumbers[] = array_slice($numbers, 0, $numbersPerSet);
    //     }

    //     $randomSet = $allNumbers[array_rand($allNumbers)];
    //     $id = $randomSet[array_rand($randomSet)];

    //     // Ensure the ID is unique
    //     while (in_array($id, self::$generatedIds)) {
    //         $id = $randomSet[array_rand($randomSet)];
    //     }
    //     $id = str_pad($id, 5, '0', STR_PAD_LEFT);
    //     self::$generatedIds[] = $id;
    //     return $prefix.$id;
    // }
}
